{"ast":null,"code":"var _jsxFileName = \"/home/divum/login/src/Content.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = (items, handleCheck, deletefn) => {\n  // const [name1,setName1]=useState(\"Earn\")\n\n  // function handleNameChange(){\n  //     const name=[\"earn\",\"grow\",\"give\"]\n\n  //     const int=Math.floor(Math.random()*3);\n  //     return setName1(name[int]);\n  //   }\n\n  // //   const event1=(e)=>{\n  // //     console.log(e.target.innerText)\n  // //   }\n  // //   const handleClick = ()=>{\n  // //     console.log('Thanks for the support')\n  // //   }\n\n  // //   const handleClick1 = (name)=>{\n  // //     console.log(`Thanks for the support ${name}`)\n  // //   }\n\n  // const [count,setCount]=useState(99)\n  // function incrementFunction() {\n  //     setCount(prevCount=>prevCount+1)\n\n  // }\n  // function decrementFunction() {\n  //     setCount(prevCount=>prevCount-1)\n\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <main>\n    // <p onDoubleClick={()=>handleClick1('jose')}>Let's {handleNameChange()} money</p>\n    // <button onClick={handleClick}>Subscribe</button>\n    // <button onClick={()=>handleClick1('jose')}>click</button>\n    // <button onClick={(e)=>event1(e)}>Event</button>\n    // </main>\n    // <main>\n    //     <button onClick={decrementFunction}>-</button>\n    //     <span>{count}</span>\n    //     <button onClick={incrementFunction}>+</button>\n    //     <p>Let's {name1} money</p>\n    //     <button onClick={handleNameChange}>Subscribe</button>\n    // </main>\n    _jsxDEV(\"main\", {\n      children: items.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.checked,\n            onChange: () => handleCheck(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: item.checked ? {\n              textDecoration: 'line-through'\n            } : null,\n            onDoubleClick: () => handleCheck(item.id),\n            children: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n            role: \"button\",\n            tabIndex: \"0\",\n            onClick: () => deletefn(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your list is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","FaTrashAlt","jsxDEV","_jsxDEV","Content","items","handleCheck","deletefn","children","length","map","item","className","type","checked","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","onDoubleClick","role","tabIndex","onClick","_c","$RefreshReg$"],"sources":["/home/divum/login/src/Content.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport {  FaTrashAlt } from 'react-icons/fa'\n\nconst Content=(items,handleCheck,deletefn)=>{\n    \n    // const [name1,setName1]=useState(\"Earn\")\n\n    // function handleNameChange(){\n    //     const name=[\"earn\",\"grow\",\"give\"]\n\n    //     const int=Math.floor(Math.random()*3);\n    //     return setName1(name[int]);\n    //   }\n\n    // //   const event1=(e)=>{\n    // //     console.log(e.target.innerText)\n    // //   }\n    // //   const handleClick = ()=>{\n    // //     console.log('Thanks for the support')\n    // //   }\n\n    // //   const handleClick1 = (name)=>{\n    // //     console.log(`Thanks for the support ${name}`)\n    // //   }\n\n    // const [count,setCount]=useState(99)\n    // function incrementFunction() {\n    //     setCount(prevCount=>prevCount+1)\n\n    // }\n    // function decrementFunction() {\n    //     setCount(prevCount=>prevCount-1)\n\n    // }\n\n    return(\n        // <main>\n        // <p onDoubleClick={()=>handleClick1('jose')}>Let's {handleNameChange()} money</p>\n        // <button onClick={handleClick}>Subscribe</button>\n        // <button onClick={()=>handleClick1('jose')}>click</button>\n        // <button onClick={(e)=>event1(e)}>Event</button>\n        // </main>\n        // <main>\n        //     <button onClick={decrementFunction}>-</button>\n        //     <span>{count}</span>\n        //     <button onClick={incrementFunction}>+</button>\n        //     <p>Let's {name1} money</p>\n        //     <button onClick={handleNameChange}>Subscribe</button>\n        // </main>\n        <main>\n            {(items.length) ? (\n            <ul>\n                {items.map((item)=>(\n                    <li className='list' key={item.id}>\n                        <input \n                        type=\"checkbox\" \n                        checked={item.checked} \n                        onChange={()=>handleCheck(item.id)}/>\n                        <label \n                        style={(item.checked)?{textDecoration:'line-through'}:null}\n                        onDoubleClick={()=>handleCheck(item.id)}>{item.item}</label>\n                        <FaTrashAlt \n                        role=\"button\"\n                        tabIndex=\"0\" \n                        onClick={()=>deletefn(item.id)}/>\n\n                    </li>\n                ) )}\n            </ul>\n):(\n    <p>Your list is empty</p>\n)\n}\n\n\n\n        </main>\n\n    )\n    }\n\n\nexport default Content"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAUC,UAAU,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAACA,CAACC,KAAK,EAACC,WAAW,EAACC,QAAQ,KAAG;EAExC;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAJ,OAAA;MAAAK,QAAA,EACMH,KAAK,CAACI,MAAM,gBACdN,OAAA;QAAAK,QAAA,EACKH,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACZR,OAAA;UAAIS,SAAS,EAAC,MAAM;UAAAJ,QAAA,gBAChBL,OAAA;YACAU,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEH,IAAI,CAACG,OAAQ;YACtBC,QAAQ,EAAEA,CAAA,KAAIT,WAAW,CAACK,IAAI,CAACK,EAAE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACrCjB,OAAA;YACAkB,KAAK,EAAGV,IAAI,CAACG,OAAO,GAAE;cAACQ,cAAc,EAAC;YAAc,CAAC,GAAC,IAAK;YAC3DC,aAAa,EAAEA,CAAA,KAAIjB,WAAW,CAACK,IAAI,CAACK,EAAE,CAAE;YAAAR,QAAA,EAAEG,IAAI,CAACA;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5DjB,OAAA,CAACF,UAAU;YACXuB,IAAI,EAAC,QAAQ;YACbC,QAAQ,EAAC,GAAG;YACZC,OAAO,EAAEA,CAAA,KAAInB,QAAQ,CAACI,IAAI,CAACK,EAAE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA,GAXXT,IAAI,CAACK,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAa7B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEbjB,OAAA;QAAAK,QAAA,EAAG;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKa;EAAC;AAGX,CAAC;AAAAO,EAAA,GA5ECvB,OAAO;AA+Eb,eAAeA,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}